package org.seasar.aptina.beans.example;

/**
 * テスト
 * 
 * @author koichik
 * @param <E>
 * @param <T>
 */
@javax.annotation.Generated({"Aptina Beans", "DEV"})
@org.seasar.aptina.beans.JavaBean
public class BarBean<E, T extends java.util.List<E> & java.io.Serializable> extends org.seasar.aptina.beans.example.BarBeanState<E, T> {

    /**
     * インスタンスを構築します。
     * 
     * @param aaa
     *            あああ
     */
    protected  BarBean(T aaa) {
        super(aaa);
    }

    /**
     * インスタンスを構築します。
     * 
     * @param <S>
     *            いいいの型
     * @param bbb
     *            いいい
     * @param hoge
     *            ほげ
     * @throws NullPointerException
     *             何かが{@literal null}だった場合
     */
     <S> BarBean(T[] bbb, S hoge) throws java.lang.NullPointerException {
        super(bbb, hoge);
    }

    /**
     * インスタンスを構築します。
     * 
     * @param aaa
     *            あああ
     * @param bbb
     *            いいい
     * @param ccc
     *            ううう
     */
    public  BarBean(T aaa, T[] bbb, java.util.List<? extends T> ccc) {
        super(aaa, bbb, ccc);
    }

    /**
     * あああを返します。
     * 
     * @return あああ
     */
    public T getAaa() {
        return aaa;
    }

    /**
     * あああを設定します。
     * 
     * @param aaa あああ
     */
    public void setAaa(T aaa) {
        this.aaa = aaa;
    }

    /**
     * いいいを返します。
     * 
     * @return いいい
     */
    public T[] getBbb() {
        return bbb;
    }

    /**
     * いいいのn番目の要素を返します。
     * 
     * @param n 返される要素のインデックス
     * @return n番目のいいい
     * @throws ArrayIndexOutOfBoundsException インデックスが配列のサイズを超えていた場合
     */
    public T getBbb(int n) throws ArrayIndexOutOfBoundsException {
        return bbb[n];
    }

    /**
     * いいいを設定します。
     * 
     * @param bbb いいい
     */
    public void setBbb(T[] bbb) {
        this.bbb = bbb;
    }

    /**
     * いいいのn番目の要素を設定します。
     * 
     * @param n 設定される要素のインデックス
     * @param bbb いいい
     * @throws ArrayIndexOutOfBoundsException インデックスが配列のサイズを超えていた場合
     */
    public void setBbb(int n, T bbb) throws ArrayIndexOutOfBoundsException {
        this.bbb[n] = bbb;
    }

    /**
     * うううを返します。
     * 
     * @return ううう
     */
    public java.util.List<? extends T> getCcc() {
        return ccc;
    }

    /**
     * うううを設定します。
     * 
     * @param ccc ううう
     */
    public void setCcc(java.util.List<? extends T> ccc) {
        this.ccc = ccc;
    }

}
